[package]
name = "opendut-lea"
version = "0.1.0"
edition.workspace = true
rust-version.workspace = true
license.workspace = true

[dependencies]
opendut-carl-api = { workspace = true, features = ["wasm-client"] }
opendut-types = { workspace = true }

chrono = { workspace = true, features = ["clock", "wasmbind"] }
console_error_panic_hook = { workspace = true }
gloo-net = { workspace = true, features = ["json"]}
gloo-timers = { workspace = true, features = ["futures"] }
jsonwebtoken = { workspace = true }
leptos = { workspace = true, features = ["csr"] }
leptos_router = { workspace = true, features = ["csr"] }
leptos-use = { workspace = true }
serde = { workspace = true, features = ["derive"] }
slotmap = { workspace = true }
strum = { workspace = true }
thiserror = { workspace = true }
tonic = { workspace = true }
tonic-web-wasm-client = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["ansi"] }
tracing-web = { workspace = true }
url = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }
leptos_oidc =  { workspace = true }
serde_json = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry_sdk = { workspace= true }
opentelemetry-semantic-conventions = { workspace = true }
opentelemetry-stdout = "0.3.0"
tracing-opentelemetry = { workspace = true }
#opentelemetry-otlp = { workspace = true, features = ["logs", "trace"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
opentelemetry-otlp = { workspace = true, features = ["logs", "trace"] }
opentelemetry-dynatrace = { version = "0.4.0", features = ["wasm"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.37"

[lints]
workspace = true
